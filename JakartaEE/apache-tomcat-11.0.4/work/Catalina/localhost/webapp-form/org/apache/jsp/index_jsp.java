/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-02-26 19:12:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.Map;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.util.Map");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

 Map<String, String> errores = (Map<String, String>) request.getAttribute("errores");
 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"es\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Formulario de usuarios</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container-fluid\">\r\n");
      out.write("<h3>Formulario de usuarios</h3>\r\n");
      out.write("\r\n");

if(errores != null && errores.size() > 0){

      out.write("\r\n");
      out.write("<ul>\r\n");
      out.write("    ");
for(String error: errores.values()){
      out.write("\r\n");
      out.write("    <li>");
      out.print(error);
      out.write("</li>\r\n");
      out.write("    ");
}
      out.write("\r\n");
      out.write("</ul>\r\n");
}
      out.write("\r\n");
      out.write("<div class = \"row\">\r\n");
      out.write("    <div class = \"col-4 offset-0\">\r\n");
      out.write("        <form action=\"/webapp-form/registro\" method=\"post\">\r\n");
      out.write("            <div class=\"row mb-3\">\r\n");
      out.write("                <label for=\"username\">Username</label>\r\n");
      out.write("                    <div><input type=\"text\" name=\"username\" id=\"username\" class=\"form-control\"></div>\r\n");
      out.write("                    ");

                        if(errores != null && errores.containsKey("username")){
                            out.println("<small style='color: red;'>"+ errores.get("username") +"</small>");
                        }
                    
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label for=\"password\">Password</label>\r\n");
      out.write("                    <div><input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\"></div>\r\n");
      out.write("                    ");

                        if(errores != null && errores.containsKey("password")){
                            out.println("<small style='color: red;'>"+errores.get("password")+"</small>");
                        }
                    
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label for=\"email\">Email</label>\r\n");
      out.write("                    <div><input type=\"text\" name=\"email\" id=\"email\" class=\"form-control\"></div>\r\n");
      out.write("                    ");

                        if(errores != null && errores.containsKey("email")){
                            out.println("<small style='color: red;'>"+errores.get("email")+"</small>");
                        }
                    
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label for=\"pais\">País</label>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <select name=\"pais\" id=\"pais\" class=\"form-select\">\r\n");
      out.write("                        <option value=\"\">-- Seleccionar --</option>\r\n");
      out.write("                        <option value=\"ES\">España</option>\r\n");
      out.write("                        <option value=\"MX\">Mexico</option>\r\n");
      out.write("                        <option value=\"Cl\" selected>Chile</option>\r\n");
      out.write("                        <option value=\"AR\">Argentina</option>\r\n");
      out.write("                        <option value=\"PE\">Perú</option>\r\n");
      out.write("                        <option value=\"CO\">Colombia</option>\r\n");
      out.write("                        <option value=\"VE\">Venezuela</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

                    if(errores != null && errores.containsKey("pais")){
                        out.println("<small style='color: red;'>"+errores.get("pais")+"</small>");
                    }
                
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label for=\"lenguajes\">Lenguajes de programación</label>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <select name=\"lenguajes\" id=\"lenguajes\" multiple class=\"form-select\">\r\n");
      out.write("                        <option value=\"java\" selected>Java SE</option>\r\n");
      out.write("                        <option value=\"jakartaee\">Jakarta EE9</option>\r\n");
      out.write("                        <option value=\"spring\" selected>Spring Boot</option>\r\n");
      out.write("                        <option value=\"js\">JavaScript</option>\r\n");
      out.write("                        <option value=\"angular\">Angular</option>\r\n");
      out.write("                        <option value=\"react\">React</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

                    if(errores != null && errores.containsKey("lenguajes")){
                        out.println("<small style='color: red;'>"+errores.get("lenguajes")+"</small>");
                    }
                
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label>Roles</label>\r\n");
      out.write("                <div class=\"form-check\">\r\n");
      out.write("                    <input class=\"form-check-input\" type=\"checkbox\" name=\"roles\" value=\"ROLE_ADMIN\">\r\n");
      out.write("                    <label class=\"form-check-label\">Administrador</label>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-check\">\r\n");
      out.write("                    <input class=\"form-check-input\" type=\"checkbox\" name=\"roles\" value=\"ROLE_USER\" checked>\r\n");
      out.write("                    <label class=\"form-check-label\">Usuario</label>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-check\">\r\n");
      out.write("                    <input class=\"form-check-input\" type=\"checkbox\" name=\"roles\" value=\"ROLE_MODERATOR\">\r\n");
      out.write("                    <label class=\"form-check-label\">Moderador</label>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

                    if(errores != null && errores.containsKey("roles")){
                        out.println("<small style='color: red;'>"+errores.get("roles")+"</small>");
                    }
                
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label>Idiomas</label>\r\n");
      out.write("                <div class=\"form-check\">\r\n");
      out.write("                    <input class=\"form-check-input\" type=\"radio\" name=\"idioma\" value=\"es\">\r\n");
      out.write("                    <label class=\"form-check-label\">Español</label>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-check\">\r\n");
      out.write("                    <input class=\"form-check-input\" type=\"radio\" name=\"idioma\" value=\"en\">\r\n");
      out.write("                    <label class=\"form-check-label\">Inglés</label>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-check\">\r\n");
      out.write("                    <input class=\"form-check-input\" type=\"radio\" name=\"idioma\" value=\"fr\">\r\n");
      out.write("                    <label class=\"form-check-label\">frances</label>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");

                    if(errores != null && errores.containsKey("idioma")){
                        out.println("<small style='color: red;'>"+errores.get("idioma")+"</small>");
                    }
                
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <label class=\"form-check-label\" for=\"habilitar\">Habilitar</label>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <input class=\"form-check-input\" type=\"checkbox\" name=\"habilitar\" id=\"habilitar\" checked>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("                <input type=\"submit\" value=\"Enviar\" class=\"btn btn-primary w-100\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <input type=\"hidden\" name=\"secreto\" value=\"12345\">\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
